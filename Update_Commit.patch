Index: src/main/tree/api/resources/ResourcesNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/tree/api/resources/ResourcesNode.java	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ src/main/tree/api/resources/ResourcesNode.java	(date 1561089943000)
@@ -1,8 +1,9 @@
 package main.tree.api.resources;
 
+import lombok.extern.slf4j.Slf4j;
 import main.tree.api.model.Node;
+import main.tree.api.model.UpdateNode;
 import main.tree.api.services.ServiceNode;
-import lombok.extern.slf4j.Slf4j;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 
@@ -30,6 +31,18 @@
 
     @PostMapping
     public ResponseEntity create(@Valid @RequestBody Node node){
+        Long id = Long.valueOf(1);
+        Optional<Node> validate1 = serviceNode.findById(Long.valueOf(node.getParentId()));
+        Optional<Node> validate2 = serviceNode.findById(Long.valueOf(1));
+
+        if ((node.getId() == node.getParentId()) && !validate2.isPresent()) {
+            node.setParentId(Long.valueOf(0));
+        } else {
+            if (!validate1.isPresent()) {
+                node.setParentId(id);
+            }
+        }
+
         return ResponseEntity.ok(serviceNode.save(node));
     }
 
@@ -38,7 +51,7 @@
         Optional<List<Node>> stock = serviceNode.findByParentId(parentId);
         if (!stock.isPresent()){
             log( "ParentId" + parentId + " is not existed");
-            ResponseEntity.badRequest().build();
+            return ResponseEntity.badRequest().build();
         }
         return ResponseEntity.ok(stock.get());
     }
@@ -51,14 +64,17 @@
         }
         return ResponseEntity.ok(stock.get());
     }
-    //Verificar porque não está atualizando o nó
-    @PutMapping
-    public ResponseEntity<Node> update(@PathVariable Long id, @Valid @RequestBody Node node){
+
+
+    @PutMapping("/{id}")
+    public ResponseEntity<UpdateNode> update(@PathVariable Long id, @Valid @RequestBody UpdateNode node) {
         if (!serviceNode.findById(id).isPresent()){
-            log("ID" +id + " is not existed");
-            ResponseEntity.badRequest().build();
+            String log = "ID" + id + " is not existed";
+            return ResponseEntity.badRequest().build();
         }
-        return ResponseEntity.ok(serviceNode.save(node));
+        node = serviceNode.update(id, node);
+
+        return ResponseEntity.ok(node);
     }
 
     @PostMapping("/{id}")
Index: src/main/tree/api/services/ServiceNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/tree/api/services/ServiceNode.java	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ src/main/tree/api/services/ServiceNode.java	(date 1561089943000)
@@ -1,9 +1,12 @@
 package main.tree.api.services;
 
 import main.tree.api.model.Node;
+import main.tree.api.model.UpdateNode;
 import main.tree.api.repository.RepositoryProduct;
 import org.springframework.stereotype.Service;
 
+import javax.validation.constraints.NotNull;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Optional;
 
@@ -26,15 +29,61 @@
     }
 
     public Node save(Node stock){
+        updateHasChildren(stock);
         return repositoryProduct.save(stock);
     }
 
+    public UpdateNode update(Long id, UpdateNode node) {
+        Node updateNode = repositoryProduct.getOne(id);
+        updateNode.setCode(node.getCode());
+        updateNode.setDescription(node.getDescription());
+        updateNode.setDetail(node.getDetail());
+        updateNode.setParentId(node.getParentId());// Porque é preciso retornar o getParentId.
+        repositoryProduct.save(updateNode);
+        return node;
+    }
+
+
     public void deleteById(Long id){
+        Node stock = repositoryProduct.getOne(id);
+        updateHasChildren(stock);
         repositoryProduct.deleteById(id);
     }
 
     // Revisar pois tem que trazer os filhos
     public Optional<List<Node>> findByParentId(Long parentId) {
+
         return repositoryProduct.findAllByParentId(parentId);
     }
+
+
+    public void updateHasChildren(@NotNull Node stock) {
+        Optional<Node> fatherNodeIsPresent = findById(stock.getParentId());
+        Node fatherNodeUpdateHasChildren = repositoryProduct.getOne(stock.getParentId());
+        Optional<Node> rootNotPresent = findById(Long.valueOf(1));
+        if (stock.getParentId() != Long.valueOf(0)) {
+            if (stock.getParentId() == 1 && !fatherNodeIsPresent.isPresent()) {
+                if (!rootNotPresent.isPresent()) {
+                    stock.setParentId(Long.valueOf(0));
+                } else {
+                    // aplicar aqui também o pai tem mais de um filho ou não
+                }
+            }
+            //Verifica se nó pai é diferente de 0 e se sim entra
+            if (fatherNodeIsPresent.isPresent() && stock.getParentId() != Long.valueOf(0)) {
+                //Verifica se
+                // Pai é presente e se pai é diferente de raiz
+                Optional<List<Node>> checkUniqueSon = findByParentId(stock.getParentId());
+                HashMap<Integer, Node> listHashMaps = new HashMap<Integer, Node>();
+                int oo = listHashMaps.size();
+                System.out.println(oo);
+                fatherNodeUpdateHasChildren.setHasChildren(true);
+                stock.setHasChildren(false);
+            } else {
+                fatherNodeUpdateHasChildren.setHasChildren(false);
+            }
+        } else {
+            stock.setHasChildren(false);
+        }
+    }
 }
Index: src/main/tree/api/model/UpdateNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/tree/api/model/UpdateNode.java	(date 1561089942000)
+++ src/main/tree/api/model/UpdateNode.java	(date 1561089942000)
@@ -0,0 +1,46 @@
+package main.tree.api.model;
+
+
+public class UpdateNode {
+    private long parentId;
+
+    private long id;
+
+    private String code;
+
+    private String detail;
+
+    private String description;
+
+    public long getParentId() {
+        return parentId;
+    }
+
+    public void setParentId(long parentId) {
+        this.parentId = parentId;
+    }
+
+    public String getCode() {
+        return code;
+    }
+
+    public void setCode(String code) {
+        this.code = code;
+    }
+
+    public String getDetail() {
+        return detail;
+    }
+
+    public void setDetail(String detail) {
+        this.detail = detail;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+}
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/Project.xml	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ .idea/codeStyles/Project.xml	(date 1561044040000)
@@ -24,5 +24,29 @@
         <option name="ITERATION_ELEMENTS_WRAPPING" value="chop_down_if_not_single" />
       </formatting-settings>
     </DBN-SQL>
+    <DBN-PSQL>
+      <case-options enabled="true">
+        <option name="KEYWORD_CASE" value="lower" />
+        <option name="FUNCTION_CASE" value="lower" />
+        <option name="PARAMETER_CASE" value="lower" />
+        <option name="DATATYPE_CASE" value="lower" />
+        <option name="OBJECT_CASE" value="preserve" />
+      </case-options>
+      <formatting-settings enabled="false" />
+    </DBN-PSQL>
+    <DBN-SQL>
+      <case-options enabled="true">
+        <option name="KEYWORD_CASE" value="lower" />
+        <option name="FUNCTION_CASE" value="lower" />
+        <option name="PARAMETER_CASE" value="lower" />
+        <option name="DATATYPE_CASE" value="lower" />
+        <option name="OBJECT_CASE" value="preserve" />
+      </case-options>
+      <formatting-settings enabled="false">
+        <option name="STATEMENT_SPACING" value="one_line" />
+        <option name="CLAUSE_CHOP_DOWN" value="chop_down_if_statement_long" />
+        <option name="ITERATION_ELEMENTS_WRAPPING" value="chop_down_if_not_single" />
+      </formatting-settings>
+    </DBN-SQL>
   </code_scheme>
 </component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jetbrains_annotations_17_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_jetbrains_annotations_17_0_0.xml	(date 1561085535000)
+++ .idea/libraries/Maven__org_jetbrains_annotations_17_0_0.xml	(date 1561085535000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jetbrains:annotations:17.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/17.0.0/annotations-17.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/17.0.0/annotations-17.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/dbnavigator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dbnavigator.xml	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ .idea/dbnavigator.xml	(date 1561064417000)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="DBNavigator.Project.DataEditorManager">
     <record-view-column-sorting-type value="BY_INDEX" />
-    <value-preview-text-wrapping value="true" />
+    <value-preview-text-wrapping value="false" />
     <value-preview-pinned value="false" />
   </component>
   <component name="DBNavigator.Project.DataExportManager">
@@ -23,12 +23,7 @@
     <autoscroll-to-editor value="false" />
     <autoscroll-from-editor value="true" />
     <show-object-properties value="true" />
-    <loaded-nodes>
-      <connection connection-id="de79f416-d463-4189-bd60-99edb69b457f">
-        <schema name="mysql" object-types="view, function, procedure, table" />
-        <schema name="restapi" object-types="constraint, view, function, procedure, column, index, dataset trigger, table" />
-      </connection>
-    </loaded-nodes>
+    <loaded-nodes />
   </component>
   <component name="DBNavigator.Project.DatabaseConsoleManager">
     <connection id="de79f416-d463-4189-bd60-99edb69b457f">
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1561002110000)
+++ .idea/vcs.xml	(date 1561002110000)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application.properties	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ src/main/resources/application.properties	(date 1561044092000)
@@ -1,7 +1,6 @@
 spring.datasource.url=jdbc:mysql://172.17.0.2:3306/restapi
 spring.datasource.username=root
 spring.datasource.password=passwordcode
-spring.datasource.driver-class-name=com.mysql.jdbc.Driver
 
 spring.jpa.hibernate.ddl-auto=create
 spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
Index: tree.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tree.iml	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ tree.iml	(date 1561085534000)
@@ -7,13 +7,13 @@
     <output url="file://$MODULE_DIR$/target/classes" />
     <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
       <excludeFolder url="file://$MODULE_DIR$/target" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-freemarker:2.1.5.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.1.5.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.1.5.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.1.5.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.1.5.RELEASE" level="project" />
@@ -27,6 +27,11 @@
     <orderEntry type="library" name="Maven: org.springframework:spring-core:5.1.7.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.1.7.RELEASE" level="project" />
     <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.23" level="project" />
+    <orderEntry type="library" name="Maven: org.freemarker:freemarker:2.3.28" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.1.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.1.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.1.7.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.1.5.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.1.5.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.9.8" level="project" />
     <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.9.0" level="project" />
@@ -42,10 +47,8 @@
     <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.3.2.Final" level="project" />
     <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.4.0" level="project" />
     <orderEntry type="library" name="Maven: org.springframework:spring-web:5.1.7.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.1.7.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.1.7.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.1.7.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.1.7.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.1.7.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-jpa:2.1.5.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.1.5.RELEASE" level="project" />
@@ -57,7 +60,6 @@
     <orderEntry type="library" name="Maven: javax.xml.bind:jaxb-api:2.3.1" level="project" />
     <orderEntry type="library" name="Maven: javax.activation:javax.activation-api:1.2.0" level="project" />
     <orderEntry type="library" name="Maven: org.hibernate:hibernate-core:5.3.10.Final" level="project" />
-    <orderEntry type="library" name="Maven: javax.persistence:javax.persistence-api:2.2" level="project" />
     <orderEntry type="library" name="Maven: org.javassist:javassist:3.23.2-GA" level="project" />
     <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.9.12" level="project" />
     <orderEntry type="library" name="Maven: antlr:antlr:2.7.7" level="project" />
@@ -73,5 +75,7 @@
     <orderEntry type="library" name="Maven: javax.validation:validation-api:2.0.1.Final" level="project" />
     <orderEntry type="library" scope="RUNTIME" name="Maven: mysql:mysql-connector-java:8.0.16" level="project" />
     <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.8" level="project" />
+    <orderEntry type="library" name="Maven: javax.persistence:javax.persistence-api:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains:annotations:17.0.0" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: POM.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- POM.xml	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ POM.xml	(date 1561085456000)
@@ -48,6 +48,17 @@
             <groupId>org.projectlombok</groupId>
             <artifactId>lombok</artifactId>
         </dependency>
+        <dependency>
+            <groupId>javax.persistence</groupId>
+            <artifactId>javax.persistence-api</artifactId>
+            <version>2.2</version>
+        </dependency>
+        <dependency>
+            <groupId>org.jetbrains</groupId>
+            <artifactId>annotations</artifactId>
+            <version>17.0.0</version>
+            <scope>compile</scope>
+        </dependency>
     </dependencies>
 
     <build>
Index: src/main/tree/api/model/Node.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/tree/api/model/Node.java	(revision cd5e0cfbb850ee9a8a8ee04faadaa2ece1226269)
+++ src/main/tree/api/model/Node.java	(date 1561089943000)
@@ -1,17 +1,17 @@
 package main.tree.api.model;
 
 import lombok.Data;
+import org.hibernate.annotations.Type;
 
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
+import javax.persistence.*;
+import java.io.Serializable;
 
 @Entity
 @Data
-public class Node {
+@SequenceGenerator(name = "id", initialValue = 1, allocationSize = 5000)
+public class Node implements Serializable {
     @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "id")
     private long id;
 
     private long parentId;
@@ -22,6 +22,55 @@
 
     private String description;
 
+    @Column(nullable = false)
+    @Type(type = "org.hibernate.type.NumericBooleanType")
     private Boolean hasChildren;
 
+    public long getId() {
+        return id;
+    }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    public long getParentId() {
+        return parentId;
+    }
+
+    public void setParentId(long parentId) {
+        this.parentId = parentId;
+    }
+
+    public String getCode() {
+        return code;
+    }
+
+    public void setCode(String code) {
+        this.code = code;
+    }
+
+    public String getDetail() {
+        return detail;
+    }
+
+    public void setDetail(String detail) {
+        this.detail = detail;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public Boolean getHasChildren() {
+        return hasChildren;
+    }
+
+    public void setHasChildren(Boolean hasChildren) {
+        this.hasChildren = hasChildren;
+    }
 }
